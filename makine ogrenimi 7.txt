import pandas as pd
import numpy as np
import seaborn as sbn
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
from sklearn.cluster import AgglomerativeClustering
import scipy.cluster.hierarchy as sch
dataframe=pd.read_csv("musteriler.csv")
print(dataframe.head())

X=dataframe.iloc[:,3:].values
kmeans=KMeans(n_clusters=3,init="k-means++")
kmeans.fit(X)
print(kmeans.cluster_centers_)
sonuclar=[]
for i in range(1,11):
    kmeans=KMeans(n_clusters=i,init="k-means++",random_state=123)
    kmeans.fit(X)
    sonuclar.append(kmeans.inertia_)
plt.plot(range(1,11),sonuclar)
plt.show()

kmeans=KMeans(n_clusters=4,init="k-means++",random_state=123)
Y_tahmin=kmeans.fit_predict(X)
print(Y_tahmin)
plt.scatter(X[Y_tahmin==0,0],X[Y_tahmin==0,1],s=100,c="red")
plt.scatter(X[Y_tahmin==1,0],X[Y_tahmin==1,1],s=100,c="blue")
plt.scatter(X[Y_tahmin==2,0],X[Y_tahmin==2,1],s=100,c="green")
plt.title("KMeans")
plt.show()

ac=AgglomerativeClustering(n_clusters=3,linkage="ward")
Y_tahmin=ac.fit_predict(X)
print(Y_tahmin)
plt.scatter(X[Y_tahmin==0,0],X[Y_tahmin==0,1],s=100,c="red")
plt.scatter(X[Y_tahmin==1,0],X[Y_tahmin==1,1],s=100,c="blue")
plt.scatter(X[Y_tahmin==2,0],X[Y_tahmin==2,1],s=100,c="green")
plt.title("HC")
plt.show()

dendragram=sch.dendrogram(sch.linkage(X,method="ward"))
plt.show()

